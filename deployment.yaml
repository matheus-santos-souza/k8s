apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 2
  template:
    metadata:
      name: goserver
      labels:
        app: goserver
    spec:
      containers:
        - name: goserver
          image: matheussantossouza/hello-go:v10

          resources:
            #Mínimo (sequestrando/reservando) para o POD.
            requests:
              cpu: 100m
              memory: 20Mi
            #Máximo para o POD
            limits:
              cpu: 500m
              memory: 25Mi

          # Realiza verificações iniciais para garantir que o container está pronto para uso.
          # Função principal: realizar a primeira verificação e delegar as verificações futuras para readiness e liveness.
          startupProbe:
            httpGet:
              path: /healthz
              port: 3000
            # initialDelaySeconds: 10 # Aguarda X segundos antes de iniciar as verificações.
            periodSeconds: 3          # Realiza verificações a cada X segundos.
            failureThreshold: 30      # Se falhar X vezes consecutivas, o container não inicia.
            timeoutSeconds: 1         # Considera uma falha se a resposta demorar mais que X segundos.
            successThreshold: 1       # Após X verificações bem-sucedidas, considera o container pronto.

          # Verifica continuamente se o container está pronto para receber tráfego.
          # Função principal: redirecionar tráfego apenas quando o container estiver pronto.
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3000
            # initialDelaySeconds: 10 # Aguarda X segundos antes de iniciar as verificações.
            periodSeconds: 3          # Realiza verificações a cada X segundos.
            failureThreshold: 1       # Após X falhas consecutivas, o container será considerado indisponível.
            timeoutSeconds: 1         # Considera uma falha se a resposta demorar mais que X segundos.
            successThreshold: 1       # Após X verificações bem-sucedidas, considera o container disponível.

          # Monitora continuamente a saúde do container e reinicia caso esteja em estado não saudável.
          # Função principal: garantir que o container seja reiniciado em caso de falhas.
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            # initialDelaySeconds: 15 # Aguarda X segundos antes de iniciar as verificações.
            periodSeconds: 5          # Realiza verificações a cada X segundos.
            failureThreshold: 1       # Após X falhas consecutivas, o container será reiniciado.
            timeoutSeconds: 1         # Considera uma falha se a resposta demorar mais que X segundos.
            successThreshold: 1       # Após X verificações bem-sucedidas, considera o container saudável.

          envFrom:
            - configMapRef:
                name: goserver-configmap
            - secretRef:
                name: goserver-secret
          
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
            - mountPath: "/go/pvc"
              name: goserver-volume
            
      volumes:
        - name: goserver-volume
          persistentVolumeClaim: 
            claimName: goserver-pvc

        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"
 
          #env: 
          #  - name: "NAME"
          #    valueFrom:
          #      configMapKeyRef:
          #        name: goserver-configmap
          #        key: "NAME"
          #  - name: "AGE"
          #    valueFrom:
          #      configMapKeyRef:
          #        name: goserver-configmap
          #        key: "AGE"